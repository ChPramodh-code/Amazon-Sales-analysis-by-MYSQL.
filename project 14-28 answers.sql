-- 15.Count the sales occurrences for each time of day on every weekday.
WITH SalesData AS (
    SELECT 
        DAYNAME(STR_TO_DATE(Date, '%Y-%m-%d')) AS Weekday,
        HOUR(TIME(Time)) AS Hour
    FROM Amazon
),
SalesOccurrences AS (
    SELECT 
        Weekday,
        Hour,
        COUNT(*) AS Occurrences
    FROM SalesData
    GROUP BY Weekday, Hour
    ORDER BY Weekday, Hour
)

SELECT * FROM SalesOccurrences;


-- 16.the customer type contributing the highest revenue. Ans: 'Member'and revenue generated by this type of customer is '164223.44400000002'
select customer_type as highest_revenue_gerenate_customer,sum(total) as highest_revenue from amazon
group by highest_revenue_gerenate_customer
order by highest_revenue desc
limit 1 ;


-- 17. the city with the highest VAT percentage is . Ans: 'Naypyitaw' and tax collected is '5265.176500000002' this is tax column VAT percentage is '5'.
SELECT city, SUM(tax) AS VAT, (SUM(tax) / (SUM(Total) - SUM(tax))) * 100 AS VAT_Percentage 
FROM amazon 
GROUP BY city 
ORDER BY VAT_Percentage  DESC 
limit 1;

--  18.  the customer type with the highest VAT payments is. Ans: 'Member' and the tax collected is  '7820.164000000002'
SELECT customer_type, SUM(tax) AS highest_VAT_payments 
FROM amazon 
GROUP BY customer_type 
ORDER BY highest_VAT_payments DESC 
LIMIT 1;

--  19.the count of distinct customer types in the dataset. Ans: '2' 
select count(DISTINCT(customer_type)) as count_of_distinct_customer_types  from amazon;


-- 20.  the count of distinct payment methods in the dataset. Ans: '3'
select count(DISTINCT(payment)) as the_count_of_distinct_payment_methods from amazon ;

-- 21.customer type occurs most frequently is. Ans: 'Member' and no.of.times occured '501'
select customer_type,count(customer_type) as most_frequent_occureance_count from amazon 
GROUP BY customer_type
order by most_frequent_occureance_count desc 
limit 1;


-- 22. the customer type with the highest purchase frequency. Ans:   'member'
SELECT customer_type, COUNT(*) AS purchase_frequency 
FROM amazon 
GROUP BY customer_type 
ORDER BY purchase_frequency DESC 
LIMIT 1;


-- 23.the predominant gender among customers. Ans: 'female'
SELECT gender, COUNT(*) AS count 
FROM amazon 
GROUP BY gender 
ORDER BY count DESC 
LIMIT 1;


-- 24.  the distribution of genders within each branch
SELECT branch, gender, COUNT(*) AS count 
FROM amazon 
GROUP BY branch, gender 
ORDER BY branch, gender;


-- 25. the time of day when customers provide the most ratings. Ans: 7 o clock evening 
SELECT hour,number_of_ratings,
    CASE 
        WHEN hour BETWEEN 5 AND 11 THEN 'Morning'
        WHEN hour BETWEEN 12 AND 17 THEN 'Afternoon'
        WHEN hour BETWEEN 18 AND 19 THEN 'Evening'
        WHEN hour BETWEEN 20 AND 23 OR hour BETWEEN 0 AND 4 THEN 'Night'
    END AS timeofday
FROM (
    SELECT HOUR(time) AS hour,COUNT(*) AS number_of_ratings
    FROM amazon
    GROUP BY HOUR(time)
) AS subquery
ORDER BY number_of_ratings DESC
LIMIT 1;



-- 26. the time of day with the highest customer ratings for each branch. Ans: below code.
SELECT hour,branch,number_of_ratings,
    CASE 
        WHEN hour BETWEEN 5 AND 11 THEN 'Morning'
        WHEN hour BETWEEN 12 AND 17 THEN 'Afternoon'
        WHEN hour BETWEEN 18 AND 19 THEN 'Evening'
        WHEN hour BETWEEN 20 AND 23 OR hour BETWEEN 0 AND 4 THEN 'Night'
    END AS timeofday
FROM (
    SELECT HOUR(time) AS hour,branch,COUNT(*) AS number_of_ratings
    FROM amazon
    GROUP BY HOUR(time), branch
) AS subquery
WHERE 
    (branch = 'a' AND number_of_ratings = 38) OR 
    (branch = 'b' AND number_of_ratings = 50) OR 
    (branch = 'c' AND number_of_ratings = 37)
ORDER BY 
    number_of_ratings DESC;




-- 27.the day of the week with the highest average ratings. Ans : 'Monday' and ratings rate average is '7.153599999999999' -- 
select DAYNAME((str_to_date(Date,'%d-%m-%Y'))) AS DayOfWeek, 
AVG(Rating) AS AverageRating FROM amazon
GROUP BY 
DayOfWeek
ORDER BY 
AverageRating DESC
limit 1;


-- 28. the day of the week with the highest average ratings for each branch. Ans: below code.
SELECT DAYNAME((str_to_date(Date,'%d-%m-%Y'))) AS DayOfWeek,branch,
AVG(Rating) AS AverageRating FROM amazon
GROUP BY 
DayOfWeek,branch
ORDER BY AverageRating DESC
limit 3;


